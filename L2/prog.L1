(:main
(:main
	0 1
	rdi <- 5 
	rsi <- 5 
	cjump rdi = rsi :choice1 :choice2 
	:choice1 
	call allocate 2 
	r8 <- rax 
	mem rsp 0 <- r8 
	r8 <- mem rsp 0 
	r8 &= 1 
	mem rsp 0 <- r8 
	r8 <- mem rsp 0 
	cjump r8 = 0 :isArray :isnotArray 
	:isArray 
	r8 <- rax 
	mem rsp 0 <- r8 
	r8 <- mem rsp 0 
	mem r8 8 <- 7 
	r8 <- mem rsp 0 
	mem r8 16 <- 9 
	r8 <- mem rsp 0 
	rdi <- r8 
	call print 1 
	r8 <- mem rsp 0 
	rdi <- mem r8 0 
	mem rsp -8 <- :encodeArraySize_ret 
	call :encodeArraySize 1 
	:encodeArraySize_ret 
	rdi <- rax 
	call print 1 
	:choice2 
	rdi <- 5 
	rsi <- 7 
	mem rsp -8 <- :generate3Darray_ret 
	call :generate3Darray 2 
	:generate3Darray_ret 
	:isnotArray 
	return 
)(:encodeArraySize
	1 0
	rdi <<= 1 
	rdi += 1 
	rax <- rdi 
	return 
)(:generate3Darray
	2 0
	call allocate 2 
	rdi <- 5 
	rsi <- rax 
	call allocate 2 
	rdi <- 5 
	rsi <- rax 
	call allocate 2 
	rdi <- rax 
	call print 1 
	return 
)
)
